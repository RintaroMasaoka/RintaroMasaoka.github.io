document.addEventListener('DOMContentLoaded', () => {
    const inputTextArea = document.getElementById('input-textarea');
    const outputTextArea = document.getElementById('output-textarea');
    const toggleDirectionButton = document.getElementById('toggle-direction-button');
    const copyOutputButton = document.getElementById('copy-output-button');
    const rulesTextArea = document.getElementById('rules-textarea');
    const saveRulesButton = document.getElementById('save-rules-button');
    const resetRulesButton = document.getElementById('reset-rules-button');
    const ruleStatus = document.getElementById('rule-status');
    const inputLabel = document.getElementById('input-label');
    const outputLabel = document.getElementById('output-label');

    // --- Default Conversion Rules ---
    const defaultRules = {
        "correspondence": [
            // big operators
            {"unicode": "‚àë", "normal": "\\sum"},
            {"unicode": "‚àè", "normal": "\\prod"},
            {"unicode": "‚à´", "normal": "\\int"},
            {"unicode": "‚®Å", "normal": "\\bigoplus"},
            {"unicode": "‚®Ç", "normal": "\\bigotimes"},
            {"unicode": "‚àÆ", "normal": "\\oint"},
            {"unicode": "‚àê", "normal": "\\coprod"},
            {"unicode": "‚ãÄ", "normal": "\\bigwedge"},
            {"unicode": "‚ãÅ", "normal": "\\bigvee"},
            {"unicode": "‚ãÇ", "normal": "\\bigcap"},
            {"unicode": "‚ãÉ", "normal": "\\bigcup"},
            // characters
            {"unicode": "‚àÖ", "normal": "\\emptyset"},
            {"unicode": "‚àÖ", "normal": "\\varnothing"},
            {"unicode": "ƒß", "normal": "\\hbar"},
            {"unicode": "‚Ñè", "normal": "\\hslash"},
            {"unicode": "‚Ñò", "normal": "\\wp"},
            {"unicode": "‚à†", "normal": "\\angle"},
            {"unicode": "‚àû", "normal": "\\infty"},
            {"unicode": "‚àÇ", "normal": "\\partial"},
            {"unicode": "‚àá", "normal": "\\nabla"},
            {"unicode": "‚òÖ", "normal": "\\star"},
            {"unicode": "‚ñ≥", "normal": "\\triangle"},
            {"unicode": "‚ñ°", "normal": "\\square"},
            {"unicode": "‚úì", "normal": "\\checkmark"},
            {"unicode": "‚àÉ", "normal": "\\exists"},
            {"unicode": "‚àÑ", "normal": "\\nexists"},
            {"unicode": "‚àÄ", "normal": "\\forall"},
            {"unicode": "‚Ä†", "normal": "\\dagger"},
            {"unicode": "‚ä•", "normal": "\\bot"},
            {"unicode": "‚ä§", "normal": "\\top"},
            {"unicode": "‚ò°", "normal": "\\danger"},
            {"unicode": "¬¨", "normal": "\\neg"},
            {"unicode": "‚Ñµ", "normal": "\\aleph"},
            {"unicode": "‚Ñ∂", "normal": "\\beth"},
            {"unicode": "‚Ñ∑", "normal": "\\gimel"},
            {"unicode": "‚Ñ∏", "normal": "\\daleth"},
            {"unicode": "ƒ±", "normal": "\\imath"},
            {"unicode": "»∑", "normal": "\\jmath"},
            {"unicode": "‚Ñì", "normal": "\\ell"},
            {"unicode": "‚ô£", "normal": "\\clubsuit"},
            {"unicode": "‚ô¢", "normal": "\\diamondsuit"},
            {"unicode": "‚ô°", "normal": "\\heartsuit"},
            {"unicode": "‚ô†", "normal": "\\spadesuit"},
            {"unicode": "‚ãØ", "normal": "\\cdots"},
            {"unicode": "‚Ä¶", "normal": "\\ldots"},
            {"unicode": "‚ã±", "normal": "\\ddots"},
            {"unicode": "‚ãÆ", "normal": "\\vdots"},
            // relations
            {"unicode": "¬±", "normal": "\\pm"},
            {"unicode": "‚àì", "normal": "\\mp"},
            {"unicode": "‚àß", "normal": "\\wedge"},
            {"unicode": "‚à®", "normal": "\\vee"},
            {"unicode": "√ó", "normal": "\\times"},
            {"unicode": "‚ãÖ", "normal": "\\cdot"},
            {"unicode": "‚àò", "normal": "\\circ"},
            {"unicode": "‚àô", "normal": "\\bullet"},
            {"unicode": "‚äï", "normal": "\\oplus"},
            {"unicode": "‚äó", "normal": "\\otimes"},
            {"unicode": "‚àñ", "normal": "\\setminus"},
            {"unicode": "‚âÄ", "normal": "\\wr"},
            {"unicode": "‚äé", "normal": "\\uplus"},
            {"unicode": "‚Üí", "normal": "\\to"},
            {"unicode": "‚Üê", "normal": "\\gets"},
            {"unicode": "‚Üë", "normal": "\\uparrow"},
            {"unicode": "‚Üì", "normal": "\\downarrow"},
            {"unicode": "‚Üî", "normal": "\\leftrightarrow"},
            {"unicode": "‚Üï", "normal": "\\updownarrow"},
            {"unicode": "‚áê", "normal": "\\Leftarrow"},
            {"unicode": "‚áí", "normal": "\\Rightarrow"},
            {"unicode": "‚áë", "normal": "\\Uparrow"},
            {"unicode": "‚áì", "normal": "\\Downarrow"},
            {"unicode": "‚áî", "normal": "\\Leftrightarrow"},
            {"unicode": "‚áï", "normal": "\\Updownarrow"},
            {"unicode": "‚üπ", "normal": "\\implies"},
            {"unicode": "‚ü∏", "normal": "\\impliedby"},
            {"unicode": "‚ü∫", "normal": "\\iff"},
            {"unicode": "‚Ü¶", "normal": "\\mapsto"},
            {"unicode": "‚üº", "normal": "\\longmapsto"},
            {"unicode": "‚üµ", "normal": "\\longleftarrow"},
            {"unicode": "‚ü∂", "normal": "\\longrightarrow"},
            {"unicode": "‚ü∑", "normal": "\\longleftrightarrow"},
            {"unicode": "‚Ü¢", "normal": "\\leftarrowtail"},
            {"unicode": "‚Ü£", "normal": "\\rightarrowtail"},
            {"unicode": "‚Ü†", "normal": "\\twoheadrightarrow"},
            {"unicode": "‚Üû", "normal": "\\twoheadleftarrow"},
            {"unicode": "‚Üº", "normal": "\\leftharpoonup"},
            {"unicode": "‚ÜΩ", "normal": "\\leftharpoondown"},
            {"unicode": "‚áÄ", "normal": "\\rightharpoonup"},
            {"unicode": "‚áÅ", "normal": "\\rightharpoondown"},
            {"unicode": "‚áå", "normal": "\\rightleftharpoons"},
            {"unicode": "‚Üù", "normal": "\\leadsto"},
            {"unicode": "‚Ü™", "normal": "\\hookrightarrow"},
            {"unicode": "‚Ü©", "normal": "\\hookleftarrow"},
            {"unicode": "‚Üó", "normal": "\\nearrow"},
            {"unicode": "‚Üò", "normal": "\\searrow"},
            {"unicode": "‚Üñ", "normal": "\\nwarrow"},
            {"unicode": "‚Üô", "normal": "\\swarrow"},
            {"unicode": "‚âî", "normal": "\\coloneqq"},
            {"unicode": "‚âï", "normal": "\\eqcolon"},
            {"unicode": "‚â†", "normal": "\\ne"},
            {"unicode": "‚â°", "normal": "\\equiv"},
            {"unicode": "‚âà", "normal": "\\approx"},
            {"unicode": "‚âä", "normal": "\\approxeq"},
            {"unicode": "‚àº", "normal": "\\sim"},
            {"unicode": "‚âÉ", "normal": "\\simeq"},
            {"unicode": "‚âÖ", "normal": "\\cong"},
            {"unicode": "‚àù", "normal": "\\propto"},
            {"unicode": "‚àà", "normal": "\\in"},
            {"unicode": "‚àã", "normal": "\\ni"},
            {"unicode": "‚àâ", "normal": "\\notin"},
            {"unicode": "‚äÇ", "normal": "\\subset"},
            {"unicode": "‚äÜ", "normal": "\\subseteq"},
            {"unicode": "‚ää", "normal": "\\subsetneq"},
            {"unicode": "‚äÉ", "normal": "\\supset"},
            {"unicode": "‚äá", "normal": "\\supseteq"},
            {"unicode": "‚äã", "normal": "\\supsetneq"},
            {"unicode": "‚à©", "normal": "\\cap"},
            {"unicode": "‚à™", "normal": "\\cup"},
            {"unicode": "‚â§", "normal": "\\le"},
            {"unicode": "‚â≤", "normal": "\\lesssim"},
            {"unicode": "‚â¶", "normal": "\\leqq"},
            {"unicode": "‚â™", "normal": "\\ll"},
            {"unicode": "‚â•", "normal": "\\ge"},
            {"unicode": "‚â≥", "normal": "\\gtrsim"},
            {"unicode": "‚âß", "normal": "\\geqq"},
            {"unicode": "‚â´", "normal": "\\gg"},
            {"unicode": "‚™Ø", "normal": "\\preceq"},
            {"unicode": "‚™∞", "normal": "\\succeq"},
            {"unicode": "‚üÇ", "normal": "\\perp"},
            {"unicode": "‚à•", "normal": "\\parallel"},
            {"unicode": "‚à£", "normal": "\\mid"},
            {"unicode": "‚à§", "normal": "\\nmid"},
            {"unicode": "‚ä¢", "normal": "\\vdash"},
            {"unicode": "‚ä£", "normal": "\\dashv"},
            {"unicode": "‚ä®", "normal": "\\models"},
            {"unicode": "‚â∫", "normal": "\\prec"},
            {"unicode": "‚âª", "normal": "\\succ"},
            {"unicode": "‚âº", "normal": "\\preccurlyeq"},
            {"unicode": "‚âΩ", "normal": "\\succcurlyeq"},
            {"unicode": "‚äè", "normal": "\\sqsubset"},
            {"unicode": "‚äê", "normal": "\\sqsupset"},
            {"unicode": "‚äë", "normal": "\\sqsubseteq"},
            {"unicode": "‚äí", "normal": "\\sqsupseteq"},
            {"unicode": "‚âç", "normal": "\\asymp"},
            {"unicode": "‚âê", "normal": "\\doteq"},
            // brackets
            {"unicode": "‚ü®", "normal": "\\langle"},
            {"unicode": "‚ü©", "normal": "\\rangle"},
            {"unicode": "‚åà", "normal": "\\lceil"},
            {"unicode": "‚åâ", "normal": "\\rceil"},
            {"unicode": "‚åä", "normal": "\\lfloor"},
            {"unicode": "‚åã", "normal": "\\rfloor"},
            {"unicode": "‚ü¶", "normal": "\\llbracket"},
            {"unicode": "‚üß", "normal": "\\rrbracket"},
            {"unicode": "‚Äñ", "normal": "\\|"},
            // special notation
            {"unicode": "√∑", "normal": "\\frac"},
            {"unicode": "‚àö", "normal": "\\sqrt"},
            {"unicode": "‚ê£", "normal": "\\quad"},
            // bold font
            {"unicode": "ùíÇ", "normal": "\\bm{a}"},
            {"unicode": "ùíÉ", "normal": "\\bm{b}"},
            {"unicode": "ùíÑ", "normal": "\\bm{c}"},
            {"unicode": "ùíÖ", "normal": "\\bm{d}"},
            {"unicode": "ùíÜ", "normal": "\\bm{e}"},
            {"unicode": "ùíá", "normal": "\\bm{f}"},
            {"unicode": "ùíà", "normal": "\\bm{g}"},
            {"unicode": "ùíâ", "normal": "\\bm{h}"},
            {"unicode": "ùíä", "normal": "\\bm{i}"},
            {"unicode": "ùíã", "normal": "\\bm{j}"},
            {"unicode": "ùíå", "normal": "\\bm{k}"},
            {"unicode": "ùíç", "normal": "\\bm{l}"},
            {"unicode": "ùíé", "normal": "\\bm{m}"},
            {"unicode": "ùíè", "normal": "\\bm{n}"},
            {"unicode": "ùíê", "normal": "\\bm{o}"},
            {"unicode": "ùíë", "normal": "\\bm{p}"},
            {"unicode": "ùíí", "normal": "\\bm{q}"},
            {"unicode": "ùíì", "normal": "\\bm{r}"},
            {"unicode": "ùíî", "normal": "\\bm{s}"},
            {"unicode": "ùíï", "normal": "\\bm{t}"},
            {"unicode": "ùíñ", "normal": "\\bm{u}"},
            {"unicode": "ùíó", "normal": "\\bm{v}"},
            {"unicode": "ùíò", "normal": "\\bm{w}"},
            {"unicode": "ùíô", "normal": "\\bm{x}"},
            {"unicode": "ùíö", "normal": "\\bm{y}"},
            {"unicode": "ùíõ", "normal": "\\bm{z}"},
            {"unicode": "ùë®", "normal": "\\bm{A}"},
            {"unicode": "ùë©", "normal": "\\bm{B}"},
            {"unicode": "ùë™", "normal": "\\bm{C}"},
            {"unicode": "ùë´", "normal": "\\bm{D}"},
            {"unicode": "ùë¨", "normal": "\\bm{E}"},
            {"unicode": "ùë≠", "normal": "\\bm{F}"},
            {"unicode": "ùëÆ", "normal": "\\bm{G}"},
            {"unicode": "ùëØ", "normal": "\\bm{H}"},
            {"unicode": "ùë∞", "normal": "\\bm{I}"},
            {"unicode": "ùë±", "normal": "\\bm{J}"},
            {"unicode": "ùë≤", "normal": "\\bm{K}"},
            {"unicode": "ùë≥", "normal": "\\bm{L}"},
            {"unicode": "ùë¥", "normal": "\\bm{M}"},
            {"unicode": "ùëµ", "normal": "\\bm{N}"},
            {"unicode": "ùë∂", "normal": "\\bm{O}"},
            {"unicode": "ùë∑", "normal": "\\bm{P}"},
            {"unicode": "ùë∏", "normal": "\\bm{Q}"},
            {"unicode": "ùëπ", "normal": "\\bm{R}"},
            {"unicode": "ùë∫", "normal": "\\bm{S}"},
            {"unicode": "ùëª", "normal": "\\bm{T}"},
            {"unicode": "ùëº", "normal": "\\bm{U}"},
            {"unicode": "ùëΩ", "normal": "\\bm{V}"},
            {"unicode": "ùëæ", "normal": "\\bm{W}"},
            {"unicode": "ùëø", "normal": "\\bm{X}"},
            {"unicode": "ùíÄ", "normal": "\\bm{Y}"},
            {"unicode": "ùíÅ", "normal": "\\bm{Z}"},
            {"unicode": "ùüé", "normal": "\\bm{0}"},
            {"unicode": "ùüè", "normal": "\\bm{1}"},
            {"unicode": "ùüê", "normal": "\\bm{2}"},
            {"unicode": "ùüë", "normal": "\\bm{3}"},
            {"unicode": "ùüí", "normal": "\\bm{4}"},
            {"unicode": "ùüì", "normal": "\\bm{5}"},
            {"unicode": "ùüî", "normal": "\\bm{6}"},
            {"unicode": "ùüï", "normal": "\\bm{7}"},
            {"unicode": "ùüñ", "normal": "\\bm{8}"},
            {"unicode": "ùüó", "normal": "\\bm{9}"},
            // Greek letters
            {"unicode": "Œ±", "normal": "\\alpha"},
            {"unicode": "Œ≤", "normal": "\\beta"},
            {"unicode": "Œ≥", "normal": "\\gamma"},
            {"unicode": "Œ¥", "normal": "\\delta"},
            {"unicode": "œµ", "normal": "\\epsilon"},
            {"unicode": "Œµ", "normal": "\\varepsilon"},
            {"unicode": "Œ∂", "normal": "\\zeta"},
            {"unicode": "Œ∑", "normal": "\\eta"},
            {"unicode": "Œ∏", "normal": "\\theta"},
            {"unicode": "œë", "normal": "\\vartheta"},
            {"unicode": "Œπ", "normal": "\\iota"},
            {"unicode": "Œ∫", "normal": "\\kappa"},
            {"unicode": "œ∞", "normal": "\\varkappa"},
            {"unicode": "Œª", "normal": "\\lambda"},
            {"unicode": "Œº", "normal": "\\mu"},
            {"unicode": "ŒΩ", "normal": "\\nu"},
            {"unicode": "Œæ", "normal": "\\xi"},
            {"unicode": "œÄ", "normal": "\\pi"},
            {"unicode": "œñ", "normal": "\\varpi"},
            {"unicode": "œÅ", "normal": "\\rho"},
            {"unicode": "œ±", "normal": "\\varrho"},
            {"unicode": "œÉ", "normal": "\\sigma"},
            {"unicode": "œÇ", "normal": "\\varsigma"},
            {"unicode": "œÑ", "normal": "\\tau"},
            {"unicode": "œÖ", "normal": "\\upsilon"},
            {"unicode": "œï", "normal": "\\phi"},
            {"unicode": "œÜ", "normal": "\\varphi"},
            {"unicode": "œá", "normal": "\\chi"},
            {"unicode": "œà", "normal": "\\psi"},
            {"unicode": "œâ", "normal": "\\omega"},
            {"unicode": "Œì", "normal": "\\Gamma"},
            {"unicode": "Œî", "normal": "\\Delta"},
            {"unicode": "Œò", "normal": "\\Theta"},
            {"unicode": "Œõ", "normal": "\\Lambda"},
            {"unicode": "Œû", "normal": "\\Xi"},
            {"unicode": "Œ†", "normal": "\\Pi"},
            {"unicode": "Œ£", "normal": "\\Sigma"},
            {"unicode": "Œ•", "normal": "\\Upsilon"},
            {"unicode": "Œ¶", "normal": "\\Phi"},
            {"unicode": "Œ®", "normal": "\\Psi"},
            {"unicode": "Œ©", "normal": "\\Omega"},
            // bold greek
            {"unicode": "ùú∂", "normal": "\\bm{\\alpha}"},
            {"unicode": "ùú∑", "normal": "\\bm{\\beta}"},
            {"unicode": "ùú∏", "normal": "\\bm{\\gamma}"},
            {"unicode": "ùúπ", "normal": "\\bm{\\delta}"},
            {"unicode": "ùú∫", "normal": "\\bm{\\epsilon}"},
            {"unicode": "ùùê", "normal": "\\bm{\\varepsilon}"},
            {"unicode": "ùúª", "normal": "\\bm{\\zeta}"},
            {"unicode": "ùúº", "normal": "\\bm{\\eta}"},
            {"unicode": "ùúΩ", "normal": "\\bm{\\theta}"},
            {"unicode": "ùùë", "normal": "\\bm{\\vartheta}"},
            {"unicode": "ùúæ", "normal": "\\bm{\\iota}"},
            {"unicode": "ùúø", "normal": "\\bm{\\kappa}"},
            {"unicode": "ùùí", "normal": "\\bm{\\varkappa}"},
            {"unicode": "ùùÄ", "normal": "\\bm{\\lambda}"},
            {"unicode": "ùùÅ", "normal": "\\bm{\\mu}"},
            {"unicode": "ùùÇ", "normal": "\\bm{\\nu}"},
            {"unicode": "ùùÉ", "normal": "\\bm{\\xi}"},
            {"unicode": "ùùÖ", "normal": "\\bm{\\pi}"},
            {"unicode": "ùùï", "normal": "\\bm{\\varpi}"},
            {"unicode": "ùùÜ", "normal": "\\bm{\\rho}"},
            {"unicode": "ùùî", "normal": "\\bm{\\varrho}"},
            {"unicode": "ùùà", "normal": "\\bm{\\sigma}"},
            {"unicode": "ùùá", "normal": "\\bm{\\varsigma}"},
            {"unicode": "ùùâ", "normal": "\\bm{\\tau}"},
            {"unicode": "ùùä", "normal": "\\bm{\\upsilon}"},
            {"unicode": "ùùã", "normal": "\\bm{\\phi}"},
            {"unicode": "ùùì", "normal": "\\bm{\\varphi}"},
            {"unicode": "ùùå", "normal": "\\bm{\\chi}"},
            {"unicode": "ùùç", "normal": "\\bm{\\psi}"},
            {"unicode": "ùùé", "normal": "\\bm{\\omega}"},
            {"unicode": "ùúû", "normal": "\\bm{\\Gamma}"},
            {"unicode": "ùúü", "normal": "\\bm{\\Delta}"},
            {"unicode": "ùú£", "normal": "\\bm{\\Theta}"},
            {"unicode": "ùú¶", "normal": "\\bm{\\Lambda}"},
            {"unicode": "ùú©", "normal": "\\bm{\\Xi}"},
            {"unicode": "ùú´", "normal": "\\bm{\\Pi}"},
            {"unicode": "ùúÆ", "normal": "\\bm{\\Sigma}"},
            {"unicode": "ùú∞", "normal": "\\bm{\\Upsilon}"},
            {"unicode": "ùú±", "normal": "\\bm{\\Phi}"},
            {"unicode": "ùú≥", "normal": "\\bm{\\Psi}"},
            {"unicode": "ùú¥", "normal": "\\bm{\\Omega}"},
            // blackboard font
            {"unicode": "ùî∏", "normal": "\\mathbb{A}"},
            {"unicode": "ùîπ", "normal": "\\mathbb{B}"},
            {"unicode": "‚ÑÇ", "normal": "\\mathbb{C}"},
            {"unicode": "ùîª", "normal": "\\mathbb{D}"},
            {"unicode": "ùîº", "normal": "\\mathbb{E}"},
            {"unicode": "ùîΩ", "normal": "\\mathbb{F}"},
            {"unicode": "ùîæ", "normal": "\\mathbb{G}"},
            {"unicode": "‚Ñç", "normal": "\\mathbb{H}"},
            {"unicode": "ùïÄ", "normal": "\\mathbb{I}"},
            {"unicode": "ùïÅ", "normal": "\\mathbb{J}"},
            {"unicode": "ùïÇ", "normal": "\\mathbb{K}"},
            {"unicode": "ùïÉ", "normal": "\\mathbb{L}"},
            {"unicode": "ùïÑ", "normal": "\\mathbb{M}"},
            {"unicode": "‚Ñï", "normal": "\\mathbb{N}"},
            {"unicode": "ùïÜ", "normal": "\\mathbb{O}"},
            {"unicode": "‚Ñô", "normal": "\\mathbb{P}"},
            {"unicode": "‚Ñö", "normal": "\\mathbb{Q}"},
            {"unicode": "‚Ñù", "normal": "\\mathbb{R}"},
            {"unicode": "ùïä", "normal": "\\mathbb{S}"},
            {"unicode": "ùïã", "normal": "\\mathbb{T}"},
            {"unicode": "ùïå", "normal": "\\mathbb{U}"},
            {"unicode": "ùïç", "normal": "\\mathbb{V}"},
            {"unicode": "ùïé", "normal": "\\mathbb{W}"},
            {"unicode": "ùïè", "normal": "\\mathbb{X}"},
            {"unicode": "ùïê", "normal": "\\mathbb{Y}"},
            {"unicode": "‚Ñ§", "normal": "\\mathbb{Z}"},
            {"unicode": "ùüò", "normal": "\\mathbb{0}"},
            {"unicode": "ùüô", "normal": "\\mathbb{1}"},
            {"unicode": "ùüö", "normal": "\\mathbb{2}"},
            {"unicode": "ùüõ", "normal": "\\mathbb{3}"},
            {"unicode": "ùüú", "normal": "\\mathbb{4}"},
            {"unicode": "ùüù", "normal": "\\mathbb{5}"},
            {"unicode": "ùüû", "normal": "\\mathbb{6}"},
            {"unicode": "ùüü", "normal": "\\mathbb{7}"},
            {"unicode": "ùü†", "normal": "\\mathbb{8}"},
            {"unicode": "ùü°", "normal": "\\mathbb{9}"},
            // Calligraphic font
            {"unicode": "ùíú", "normal": "\\mathcal{A}"},
            {"unicode": "‚Ñ¨", "normal": "\\mathcal{B}"},
            {"unicode": "ùíû", "normal": "\\mathcal{C}"},
            {"unicode": "ùíü", "normal": "\\mathcal{D}"},
            {"unicode": "‚Ñ∞", "normal": "\\mathcal{E}"},
            {"unicode": "‚Ñ±", "normal": "\\mathcal{F}"},
            {"unicode": "ùí¢", "normal": "\\mathcal{G}"},
            {"unicode": "‚Ñã", "normal": "\\mathcal{H}"},
            {"unicode": "‚Ñê", "normal": "\\mathcal{I}"},
            {"unicode": "ùí•", "normal": "\\mathcal{J}"},
            {"unicode": "ùí¶", "normal": "\\mathcal{K}"},
            {"unicode": "‚Ñí", "normal": "\\mathcal{L}"},
            {"unicode": "‚Ñ≥", "normal": "\\mathcal{M}"},
            {"unicode": "ùí©", "normal": "\\mathcal{N}"},
            {"unicode": "ùí™", "normal": "\\mathcal{O}"},
            {"unicode": "ùí´", "normal": "\\mathcal{P}"},
            {"unicode": "ùí¨", "normal": "\\mathcal{Q}"},
            {"unicode": "‚Ñõ", "normal": "\\mathcal{R}"},
            {"unicode": "ùíÆ", "normal": "\\mathcal{S}"},
            {"unicode": "ùíØ", "normal": "\\mathcal{T}"},
            {"unicode": "ùí∞", "normal": "\\mathcal{U}"},
            {"unicode": "ùí±", "normal": "\\mathcal{V}"},
            {"unicode": "ùí≤", "normal": "\\mathcal{W}"},
            {"unicode": "ùí≥", "normal": "\\mathcal{X}"},
            {"unicode": "ùí¥", "normal": "\\mathcal{Y}"},
            {"unicode": "ùíµ", "normal": "\\mathcal{Z}"},
            // Fraktur font
            {"unicode": "ùîû", "normal": "\\mathfrak{a}"},
            {"unicode": "ùîü", "normal": "\\mathfrak{b}"},
            {"unicode": "ùî†", "normal": "\\mathfrak{c}"},
            {"unicode": "ùî°", "normal": "\\mathfrak{d}"},
            {"unicode": "ùî¢", "normal": "\\mathfrak{e}"},
            {"unicode": "ùî£", "normal": "\\mathfrak{f}"},
            {"unicode": "ùî§", "normal": "\\mathfrak{g}"},
            {"unicode": "ùî•", "normal": "\\mathfrak{h}"},
            {"unicode": "ùî¶", "normal": "\\mathfrak{i}"},
            {"unicode": "ùîß", "normal": "\\mathfrak{j}"},
            {"unicode": "ùìÄ", "normal": "\\mathfrak{k}"},
            {"unicode": "ùî©", "normal": "\\mathfrak{l}"},
            {"unicode": "ùî™", "normal": "\\mathfrak{m}"},
            {"unicode": "ùî´", "normal": "\\mathfrak{n}"},
            {"unicode": "ùî¨", "normal": "\\mathfrak{o}"},
            {"unicode": "ùî≠", "normal": "\\mathfrak{p}"},
            {"unicode": "ùîÆ", "normal": "\\mathfrak{q}"},
            {"unicode": "ùîØ", "normal": "\\mathfrak{r}"},
            {"unicode": "ùî∞", "normal": "\\mathfrak{s}"},
            {"unicode": "ùî±", "normal": "\\mathfrak{t}"},
            {"unicode": "ùî≤", "normal": "\\mathfrak{u}"},
            {"unicode": "ùî≥", "normal": "\\mathfrak{v}"},
            {"unicode": "ùî¥", "normal": "\\mathfrak{w}"},
            {"unicode": "ùîµ", "normal": "\\mathfrak{x}"},
            {"unicode": "ùî∂", "normal": "\\mathfrak{y}"},
            {"unicode": "ùî∑", "normal": "\\mathfrak{z}"},
            {"unicode": "ùîÑ", "normal": "\\mathfrak{A}"},
            {"unicode": "ùîÖ", "normal": "\\mathfrak{B}"},
            {"unicode": "‚Ñ≠", "normal": "\\mathfrak{C}"},
            {"unicode": "ùîá", "normal": "\\mathfrak{D}"},
            {"unicode": "ùîà", "normal": "\\mathfrak{E}"},
            {"unicode": "ùîâ", "normal": "\\mathfrak{F}"},
            {"unicode": "ùîä", "normal": "\\mathfrak{G}"},
            {"unicode": "‚Ñå", "normal": "\\mathfrak{H}"},
            {"unicode": "‚Ñë", "normal": "\\mathfrak{I}"}, 
            {"unicode": "ùîç", "normal": "\\mathfrak{J}"},
            {"unicode": "ùîé", "normal": "\\mathfrak{K}"},
            {"unicode": "ùîè", "normal": "\\mathfrak{L}"},
            {"unicode": "ùîê", "normal": "\\mathfrak{M}"},
            {"unicode": "ùîë", "normal": "\\mathfrak{N}"},
            {"unicode": "ùîí", "normal": "\\mathfrak{O}"},
            {"unicode": "ùîì", "normal": "\\mathfrak{P}"},
            {"unicode": "ùîî", "normal": "\\mathfrak{Q}"},
            {"unicode": "‚Ñú", "normal": "\\mathfrak{R}"}, 
            {"unicode": "ùîñ", "normal": "\\mathfrak{S}"},
            {"unicode": "ùîó", "normal": "\\mathfrak{T}"},
            {"unicode": "ùîò", "normal": "\\mathfrak{U}"},
            {"unicode": "ùîô", "normal": "\\mathfrak{V}"},
            {"unicode": "ùîö", "normal": "\\mathfrak{W}"},
            {"unicode": "ùîõ", "normal": "\\mathfrak{X}"},
            {"unicode": "ùîú", "normal": "\\mathfrak{Y}"},
            {"unicode": "‚Ñ®", "normal": "\\mathfrak{Z}"},
            // sub/superscript
            {"unicode": "‚Å∞", "normal": "^0"},
            {"unicode": "¬π", "normal": "^1"},
            {"unicode": "¬≤", "normal": "^2"},
            {"unicode": "¬≥", "normal": "^3"},
            {"unicode": "‚Å¥", "normal": "^4"},
            {"unicode": "‚Åµ", "normal": "^5"},
            {"unicode": "‚Å∂", "normal": "^6"},
            {"unicode": "‚Å∑", "normal": "^7"},
            {"unicode": "‚Å∏", "normal": "^8"},
            {"unicode": "‚Åπ", "normal": "^9"},
            {"unicode": "‚Å∫", "normal": "^+"},
            {"unicode": "‚Åª", "normal": "^-"},
            {"unicode": "‚ÇÄ", "normal": "_0"},
            {"unicode": "‚ÇÅ", "normal": "_1"},
            {"unicode": "‚ÇÇ", "normal": "_2"},
            {"unicode": "‚ÇÉ", "normal": "_3"},
            {"unicode": "‚ÇÑ", "normal": "_4"},
            {"unicode": "‚ÇÖ", "normal": "_5"},
            {"unicode": "‚ÇÜ", "normal": "_6"},
            {"unicode": "‚Çá", "normal": "_7"},
            {"unicode": "‚Çà", "normal": "_8"},
            {"unicode": "‚Çâ", "normal": "_9"},
            {"unicode": "‚Çä", "normal": "_+"},
            {"unicode": "‚Çã", "normal": "_-"}
        ],
        "other_normal": [
            {"unicode": "‚üπ", "normal": "\\Longrightarrow"},
            {"unicode": "‚ü∏", "normal": "\\Longleftarrow"},
            {"unicode": "‚ü∫", "normal": "\\Longleftrightarrow"},
            {"unicode": "‚Üí", "normal": "\\rightarrow"},
            {"unicode": "‚Üê", "normal": "\\leftarrow"},
            {"unicode": "‚â†", "normal": "\\neq"},
            {"unicode": "‚â†", "normal": "\\not="},
            {"unicode": "‚â†", "normal": "\\not ="},
            {"unicode": "‚à£", "normal": "\\vert"},
            {"unicode": "‚Äñ", "normal": "\\Vert"}, 
            {"unicode": "‚â§", "normal": "\\leq"},
            {"unicode": "‚â•", "normal": "\\geq"},
            {"unicode": "‚âî", "normal": "\\coloneq"},
            {"unicode": "ùüô", "normal": "\\mathbbm{1}"},
            {"unicode": "‚Å∞", "normal": "^{0}"},
            {"unicode": "¬π", "normal": "^{1}"},
            {"unicode": "¬≤", "normal": "^{2}"},
            {"unicode": "¬≥", "normal": "^{3}"},
            {"unicode": "‚Å¥", "normal": "^{4}"},
            {"unicode": "‚Åµ", "normal": "^{5}"},
            {"unicode": "‚Å∂", "normal": "^{6}"},
            {"unicode": "‚Å∑", "normal": "^{7}"},
            {"unicode": "‚Å∏", "normal": "^{8}"},
            {"unicode": "‚Åπ", "normal": "^{9}"},
            {"unicode": "‚Å∫", "normal": "^{+}"},
            {"unicode": "‚Åª", "normal": "^{-}"},
            {"unicode": "‚ÇÄ", "normal": "_{0}"},
            {"unicode": "‚ÇÅ", "normal": "_{1}"},
            {"unicode": "‚ÇÇ", "normal": "_{2}"},
            {"unicode": "‚ÇÉ", "normal": "_{3}"},
            {"unicode": "‚ÇÑ", "normal": "_{4}"},
            {"unicode": "‚ÇÖ", "normal": "_{5}"},
            {"unicode": "‚ÇÜ", "normal": "_{6}"},
            {"unicode": "‚Çá", "normal": "_{7}"},
            {"unicode": "‚Çà", "normal": "_{8}"},
            {"unicode": "‚Çâ", "normal": "_{9}"},
            {"unicode": "‚Çä", "normal": "_{+}"},
            {"unicode": "‚Çã", "normal": "_{-}"},
            {"unicode": "ùíú", "normal": "\\mathscr{A}"},
            {"unicode": "‚Ñ¨", "normal": "\\mathscr{B}"},
            {"unicode": "ùíû", "normal": "\\mathscr{C}"},
            {"unicode": "ùíü", "normal": "\\mathscr{D}"},
            {"unicode": "‚Ñ∞", "normal": "\\mathscr{E}"},
            {"unicode": "‚Ñ±", "normal": "\\mathscr{F}"},
            {"unicode": "ùí¢", "normal": "\\mathscr{G}"},
            {"unicode": "‚Ñã", "normal": "\\mathscr{H}"},
            {"unicode": "‚Ñê", "normal": "\\mathscr{I}"},
            {"unicode": "ùí•", "normal": "\\mathscr{J}"},
            {"unicode": "ùí¶", "normal": "\\mathscr{K}"},
            {"unicode": "‚Ñí", "normal": "\\mathscr{L}"},
            {"unicode": "‚Ñ≥", "normal": "\\mathscr{M}"},
            {"unicode": "ùí©", "normal": "\\mathscr{N}"},
            {"unicode": "ùí™", "normal": "\\mathscr{O}"},
            {"unicode": "ùí´", "normal": "\\mathscr{P}"},
            {"unicode": "ùí¨", "normal": "\\mathscr{Q}"},
            {"unicode": "‚Ñõ", "normal": "\\mathscr{R}"},
            {"unicode": "ùíÆ", "normal": "\\mathscr{S}"},
            {"unicode": "ùíØ", "normal": "\\mathscr{T}"},
            {"unicode": "ùí∞", "normal": "\\mathscr{U}"},
            {"unicode": "ùí±", "normal": "\\mathscr{V}"},
            {"unicode": "ùí≤", "normal": "\\mathscr{W}"},
            {"unicode": "ùí≥", "normal": "\\mathscr{X}"},
            {"unicode": "ùí¥", "normal": "\\mathscr{Y}"},
            {"unicode": "ùíµ", "normal": "\\mathscr{Z}"},
        ],
        "other_unicode": [
            {"unicode": "ùõº", "normal": "\\alpha"},
            {"unicode": "ùõΩ", "normal": "\\beta"},
            {"unicode": "ùõæ", "normal": "\\gamma"},
            {"unicode": "ùõø", "normal": "\\delta"},
            {"unicode": "ùúñ", "normal": "\\varepsilon"},
            {"unicode": "ùúÄ", "normal": "\\epsilon"},
            {"unicode": "ùúÅ", "normal": "\\zeta"},
            {"unicode": "ùúÇ", "normal": "\\eta"},
            {"unicode": "ùúÉ", "normal": "\\theta"},
            {"unicode": "ùúó", "normal": "\\vartheta"},
            {"unicode": "ùúÑ", "normal": "\\iota"},
            {"unicode": "ùúÖ", "normal": "\\kappa"},
            {"unicode": "ùúò", "normal": "\\varkappa"},
            {"unicode": "ùúÜ", "normal": "\\lambda"},
            {"unicode": "ùúá", "normal": "\\mu"},
            {"unicode": "ùúà", "normal": "\\nu"},
            {"unicode": "ùúâ", "normal": "\\xi"},
            {"unicode": "ùúã", "normal": "\\pi"},
            {"unicode": "ùúõ", "normal": "\\varpi"},
            {"unicode": "ùúå", "normal": "\\rho"},
            {"unicode": "ùúö", "normal": "\\varrho"},
            {"unicode": "ùúé", "normal": "\\sigma"},
            {"unicode": "ùúç", "normal": "\\varsigma"},
            {"unicode": "ùúè", "normal": "\\tau"},
            {"unicode": "ùúê", "normal": "\\upsilon"},
            {"unicode": "ùúë", "normal": "\\phi"},
            {"unicode": "ùúô", "normal": "\\varphi"},
            {"unicode": "ùúí", "normal": "\\chi"},
            {"unicode": "ùúì", "normal": "\\psi"},
            {"unicode": "ùúî", "normal": "\\omega"},
            {"unicode": "ùõ§", "normal": "\\Gamma"},
            {"unicode": "ùõ•", "normal": "\\Delta"},
            {"unicode": "ùõ©", "normal": "\\Theta"},
            {"unicode": "ùõ¨", "normal": "\\Lambda"},
            {"unicode": "ùõØ", "normal": "\\Xi"},
            {"unicode": "ùõ±", "normal": "\\Pi"},
            {"unicode": "ùõ¥", "normal": "\\Sigma"},
            {"unicode": "ùõ∂", "normal": "\\Upsilon"},
            {"unicode": "ùõ∑", "normal": "\\Phi"},
            {"unicode": "ùõπ", "normal": "\\Psi"},
            {"unicode": "ùõ∫", "normal": "\\Omega"}
        ]
    };

    let currentRules = {};
    let conversionDirection = 'unicodeToNormal';
    let processedRules = {
        unicodeToNormalMap: [],
        normalToUnicodeMap: []
    };

    // --- Helper Functions (Unchanged) ---
    function escapeRegExp(string) { /* ... */ return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); }
    function isAlphabeticEnding(str) { /* ... */ if (!str || str.length === 0) return false; const lastChar = str.slice(-1); return /[a-zA-Z]/.test(lastChar); }

    // --- Rule Processing (Unchanged) ---
    function processRules(rules) { /* ... */
        const unicodeToNormalMap = []; const normalToUnicodeMap = [];
        const addRule = (map, rule) => { if (!map.some(existing => existing.from === rule.from)) { map.push(rule); } };
        rules = rules || {}; rules.correspondence = rules.correspondence || []; rules.other_unicode = rules.other_unicode || []; rules.other_normal = rules.other_normal || [];
        if (Array.isArray(rules.correspondence)) { rules.correspondence.forEach(rule => { if (rule.unicode && rule.normal) { const n = isAlphabeticEnding(rule.normal); addRule(unicodeToNormalMap, {from: rule.unicode, to: rule.normal, needsSpacing: n, fromLength: rule.unicode.length}); addRule(normalToUnicodeMap, {from: rule.normal, to: rule.unicode, needsSpacing: n, fromLength: rule.normal.length}); } }); }
        if (Array.isArray(rules.other_unicode)) { rules.other_unicode.forEach(rule => { if (rule.unicode && rule.normal) { const n = isAlphabeticEnding(rule.normal); addRule(unicodeToNormalMap, {from: rule.unicode, to: rule.normal, needsSpacing: n, fromLength: rule.unicode.length}); } }); }
        if (Array.isArray(rules.other_normal)) { rules.other_normal.forEach(rule => { if (rule.unicode && rule.normal) { const n = isAlphabeticEnding(rule.normal); addRule(normalToUnicodeMap, {from: rule.normal, to: rule.unicode, needsSpacing: n, fromLength: rule.normal.length}); } }); }
        unicodeToNormalMap.sort((a, b) => b.fromLength - a.fromLength); normalToUnicodeMap.sort((a, b) => b.fromLength - a.fromLength);
        return { unicodeToNormalMap, normalToUnicodeMap };
    }

    // --- Textarea Formatter (Unchanged) ---
    function formatRulesForTextarea(rules) {
        try {
            rules = rules || {}; rules.correspondence = Array.isArray(rules.correspondence) ? rules.correspondence : []; rules.other_unicode = Array.isArray(rules.other_unicode) ? rules.other_unicode : []; rules.other_normal = Array.isArray(rules.other_normal) ? rules.other_normal : [];
            const indent = "  "; let output = "{\n";
            const processRuleArray = (arrayName, ruleArray) => {
                let arrayOutput = `${indent}"${arrayName}": [\n`; if (ruleArray.length === 0) { return arrayOutput + `${indent}],\n`; }
                let maxUnicodeValueLength = 0; ruleArray.forEach(rule => { if (rule && typeof rule.unicode === 'string') { maxUnicodeValueLength = Math.max(maxUnicodeValueLength, JSON.stringify(rule.unicode).length); } });
                const keyUnicode = '"unicode": '; const keyNormal = '"normal": '; const valueSeparator = ', ';
                const formattedRuleLines = ruleArray.map((rule, index) => {
                    if (rule && typeof rule.unicode === 'string' && typeof rule.normal === 'string') {
                        const unicodeValueStr = JSON.stringify(rule.unicode); const normalValueStr = JSON.stringify(rule.normal); const paddedUnicodeValue = unicodeValueStr.padEnd(maxUnicodeValueLength);
                        const line = `${indent}${indent}{${keyUnicode}${paddedUnicodeValue}${valueSeparator}${keyNormal}${normalValueStr}}`; const comma = (index < ruleArray.length - 1) ? "," : ""; return line + comma;
                    } return null;
                }).filter(line => line !== null);
                arrayOutput += formattedRuleLines.join('\n'); arrayOutput += `\n${indent}],\n`; return arrayOutput;
            };
            output += processRuleArray("correspondence", rules.correspondence); output += processRuleArray("other_unicode", rules.other_unicode); output += processRuleArray("other_normal", rules.other_normal);
            if (output.endsWith(',\n')) { output = output.slice(0, -2) + '\n'; } output += "}"; return output;
        } catch (error) { console.error("Error formatting rules:", error); return JSON.stringify(rules, null, 2); }
     }

    // --- Translation Functions (Unchanged) ---
    function translateBlockUnicodeToNormal(block, rulesMap) {
        let result = block;
        rulesMap.forEach(rule => {
            const escapedFrom = escapeRegExp(rule.from); let regex;
            if (rule.needsSpacing) {
                regex = new RegExp(escapedFrom + '(?=[a-zA-Z])', 'g'); result = result.replace(regex, () => rule.to + ' ');
                regex = new RegExp(escapedFrom + '(?![a-zA-Z])', 'g'); result = result.replace(regex, rule.to);
                const endRegex = new RegExp(escapeRegExp(rule.from) + '$');
                if (endRegex.test(block) && result.endsWith(rule.from)) { result = result.replace(endRegex, rule.to); }
            } else { regex = new RegExp(escapedFrom, 'g'); result = result.replace(regex, rule.to); }
        }); return result;
    }
    function translateBlockNormalToUnicode(block, rulesMap) {
        let result = block;
        rulesMap.forEach(rule => {
            const escapedFrom = escapeRegExp(rule.from); let regex;
            if (rule.needsSpacing) { regex = new RegExp(escapedFrom + '(?![a-zA-Z])', 'g'); result = result.replace(regex, rule.to); }
            else { regex = new RegExp(escapedFrom, 'g'); result = result.replace(regex, rule.to); }
        }); return result;
    }

    // --- Main Conversion Function ---
    function convert() {
        const inputText = inputTextArea.value; let outputText = '';
        try {
            if (!processedRules || !processedRules.unicodeToNormalMap || !processedRules.normalToUnicodeMap || processedRules.unicodeToNormalMap.length === 0 || processedRules.normalToUnicodeMap.length === 0) {
                console.warn("Rules not processed. Trying to process current rules."); if (Object.keys(currentRules).length === 0) { currentRules = JSON.parse(JSON.stringify(defaultRules)); }
                 try { processedRules = processRules(currentRules); if (ruleStatus.classList.contains('error')) { ruleStatus.textContent = ''; ruleStatus.className = ''; } }
                 catch (ruleProcessingError) { console.error("Error processing rules:", ruleProcessingError); console.warn("Falling back to default rules."); ruleStatus.textContent = `Error processing rules: ${ruleProcessingError.message}. Attempting with default rules.`; ruleStatus.className = 'error'; try { processedRules = processRules(JSON.parse(JSON.stringify(defaultRules))); } catch (defaultProcessingError) { console.error("FATAL: Error processing default rules:", defaultProcessingError); outputTextArea.value = "Cannot convert due to rule processing error."; return; } }
                 if (!processedRules || !processedRules.unicodeToNormalMap || !processedRules.normalToUnicodeMap || processedRules.unicodeToNormalMap.length === 0 || processedRules.normalToUnicodeMap.length === 0){ throw new Error("Failed to generate rule map."); }
            }
            const blocks = inputText.split('\\\\'); let convertedBlocks;
            if (conversionDirection === 'unicodeToNormal') { convertedBlocks = blocks.map(block => translateBlockUnicodeToNormal(block, processedRules.unicodeToNormalMap)); } else { convertedBlocks = blocks.map(block => translateBlockNormalToUnicode(block, processedRules.normalToUnicodeMap)); }
            outputText = convertedBlocks.join('\\\\'); outputTextArea.value = outputText;
            if (!ruleStatus.textContent.startsWith('Error processing rules') && !ruleStatus.textContent.startsWith('Conversion error')) { ruleStatus.textContent = ''; ruleStatus.className = ''; } // Avoid clearing rule processing errors
        } catch (error) { console.error("Conversion error:", error); outputTextArea.value = `Conversion error:\n${error.message}`; ruleStatus.textContent = `Conversion error: ${error.message}`; ruleStatus.className = 'error'; }
    }

    // --- Update UI ---
    function updateUIForDirection() {
        if (conversionDirection === 'unicodeToNormal') {
            inputLabel.textContent = 'Input (Unicode)';
            outputLabel.textContent = 'Output (Normal)';
            toggleDirectionButton.textContent = 'Switch to Normal ‚Üí Unicode';
            inputTextArea.placeholder = 'Unicode LaTeX code (e.g., Œ± ‚Üí Œ≤)';
            outputTextArea.placeholder = 'Conversion result (e.g., \\alpha \\to \\beta)';
        } else {
            inputLabel.textContent = 'Input (Normal)';
            outputLabel.textContent = 'Output (Unicode)';
            toggleDirectionButton.textContent = 'Switch to Unicode ‚Üí Normal';
            inputTextArea.placeholder = 'Normal LaTeX code (e.g., \\alpha \\to \\beta)';
            outputTextArea.placeholder = 'Conversion result (e.g., Œ± ‚Üí Œ≤)';
        }
        // Swap content if user toggles direction
        const currentInput = inputTextArea.value;
        inputTextArea.value = outputTextArea.value;
        outputTextArea.value = currentInput;
        convert(); // Convert after updating UI and potentially swapping content
    }

    // --- Load/Save Rules ---
    function loadRules() {
        try {
            const storedRules = localStorage.getItem('latexConverterRules'); if (storedRules) { const parsedRules = JSON.parse(storedRules); if (typeof parsedRules === 'object' && parsedRules !== null && Array.isArray(parsedRules.correspondence)) { currentRules = parsedRules; if (!currentRules.other_normal) currentRules.other_normal = []; if (!currentRules.other_unicode) currentRules.other_unicode = []; rulesTextArea.value = formatRulesForTextarea(currentRules); ruleStatus.textContent = 'Loaded saved custom rules'; ruleStatus.className = ''; } else { console.warn("Invalid format in stored rules."); currentRules = JSON.parse(JSON.stringify(defaultRules)); rulesTextArea.value = formatRulesForTextarea(currentRules); ruleStatus.textContent = 'Invalid custom rules found, using default rules'; ruleStatus.className = 'error'; } } else { currentRules = JSON.parse(JSON.stringify(defaultRules)); rulesTextArea.value = formatRulesForTextarea(currentRules); ruleStatus.textContent = 'Using default rules'; ruleStatus.className = ''; }
            processedRules = processRules(currentRules);
        } catch (error) { console.error("Error applying rules:", error); currentRules = JSON.parse(JSON.stringify(defaultRules)); rulesTextArea.value = formatRulesForTextarea(currentRules); try { processedRules = processRules(currentRules); ruleStatus.textContent = `Rule application error (${error.message}). Using default rules.`; ruleStatus.className = 'error'; } catch (processingError) { console.error("FATAL:", processingError); processedRules = { unicodeToNormalMap: [], normalToUnicodeMap: [] }; currentRules = { correspondence: [], other_normal: [], other_unicode: [] }; rulesTextArea.value = formatRulesForTextarea(currentRules); ruleStatus.textContent = 'Fatal error: Failed to process rules.'; ruleStatus.className = 'error'; } }
    }

    // --- Event Listeners ---
    inputTextArea.addEventListener('input', convert);

    toggleDirectionButton.addEventListener('click', () => {
        conversionDirection = (conversionDirection === 'unicodeToNormal') ? 'normalToUnicode' : 'unicodeToNormal';
        updateUIForDirection(); // This now handles UI text update, content swap, and conversion
    });

    copyOutputButton.addEventListener('click', () => {
        const originalText = copyOutputButton.textContent;
        if (outputTextArea.value) {
            navigator.clipboard.writeText(outputTextArea.value).then(() => {
                 copyOutputButton.textContent = 'Copied!';
                 setTimeout(() => { copyOutputButton.textContent = originalText; }, 1500);
            }).catch(err => {
                console.error('Copy failed', err);
                alert('Failed to copy text.'); // User feedback for copy failure
            });
        } else {
            alert('Nothing to copy.'); // User feedback if output is empty
        }
    });

    saveRulesButton.addEventListener('click', () => {
        try {
            const newRulesRaw = rulesTextArea.value;
            if (!newRulesRaw.trim()) { throw new Error("Rules cannot be empty."); }
            const newRules = JSON.parse(newRulesRaw);
            // Basic Validation
            if (typeof newRules !== 'object' || newRules === null) throw new Error("Rules must be a JSON object.");
            if (!Array.isArray(newRules.correspondence)) throw new Error("'correspondence' must be an array.");
            if (newRules.hasOwnProperty('other_normal') && !Array.isArray(newRules.other_normal)) throw new Error("'other_normal' must be an array if present.");
            if (newRules.hasOwnProperty('other_unicode') && !Array.isArray(newRules.other_unicode)) throw new Error("'other_unicode' must be an array if present.");
            // Ensure arrays exist even if empty in the input JSON
             if (!newRules.other_normal) newRules.other_normal = [];
             if (!newRules.other_unicode) newRules.other_unicode = [];

            const tempProcessed = processRules(newRules); // Test processing before saving
            currentRules = newRules;
            processedRules = tempProcessed;
            localStorage.setItem('latexConverterRules', JSON.stringify(currentRules));
            rulesTextArea.value = formatRulesForTextarea(currentRules); // Reformat for consistency
            ruleStatus.textContent = 'Rules saved and applied successfully';
            ruleStatus.className = '';
            convert(); // Re-run conversion with new rules
        } catch (error) {
            console.error("Error saving rules:", error);
            ruleStatus.textContent = `Error saving/processing rules: ${error.message}`;
            ruleStatus.className = 'error';
        }
    });

    resetRulesButton.addEventListener('click', () => {
        if (confirm('Are you sure you want to reset to default rules? This will remove your custom rules.')) {
            try {
                currentRules = JSON.parse(JSON.stringify(defaultRules));
                processedRules = processRules(currentRules);
                localStorage.removeItem('latexConverterRules');
                rulesTextArea.value = formatRulesForTextarea(currentRules);
                ruleStatus.textContent = 'Reset to default rules';
                ruleStatus.className = '';
                convert(); // Re-run conversion with default rules
            } catch (error) {
                console.error("Error resetting rules:", error);
                ruleStatus.textContent = `Reset error: ${error.message}`;
                ruleStatus.className = 'error';
                // Attempt to at least display default rules structure on error
                try { rulesTextArea.value = formatRulesForTextarea(defaultRules); } catch { rulesTextArea.value = "{}"; }
                processedRules = { unicodeToNormalMap: [], normalToUnicodeMap: [] }; // Clear processed rules on error
            }
        }
    });

    // --- Initial Load ---
    loadRules();
    // Initialize UI text and run initial conversion if needed (loadRules handles processing)
    updateUIForDirection(); // Call this AFTER loadRules to set initial text correctly and run conversion

}); // End DOMContentLoaded